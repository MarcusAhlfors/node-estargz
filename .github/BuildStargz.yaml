name: Build and Push Stargz Optimized Docker Image to GHCR

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      #- name: Build Docker image
      #  id: docker_build
      #  run: |
      #    DOCKER_BUILDKIT=1 docker build --progress=plain -t ghcr.io/MarcusAhlfors/node-estargz:latest .

      - name: Build Arm Docker image
        id: docker_build
        run: |
          docker buildx build --platform linux/arm64 --output=type=oci,dest=image.tar -t ghcr.io/MarcusAhlfors/node-estargz:latest .

      - name: Install ctr-remote (Stargz optimizer)
        run: |
          sudo apt-get update && sudo apt-get install -y make git
          git clone https://github.com/containerd/stargz-snapshotter.git
          cd stargz-snapshotter
          make install

      - name: Optimize Docker image with Stargz
        run: |
          IMAGE_NAME=ghcr.io/${{ github.repository_owner }}/myapp:latest
          ctr-remote image optimize --oci --entrypoint='[ "/bin/sh" ]' $IMAGE_NAME ${IMAGE_NAME}-stargz

      - name: Log in to GHCR
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Push Stargz Optimized Image to GHCR
        run: |
          docker tag ${IMAGE_NAME}-stargz ghcr.io/${{ github.repository_owner }}/myapp:stargz-latest
          docker push ghcr.io/${{ github.repository_owner }}/myapp:stargz-latest
